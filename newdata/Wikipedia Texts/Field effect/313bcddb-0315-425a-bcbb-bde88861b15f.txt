Immersed Boundary Method

In computational fluid dynamics, the immersed boundary method originally referred to an approach developed by Charles Peskin in 1972 to simulate fluid-structure (fiber) interactions. Treating the coupling of the structure deformations and the fluid flow poses a number of challenging problems for numerical simulations (the elastic boundary changes the flow of the fluid and the fluid moves the elastic boundary simultaneously). In the immersed boundary method the fluid is represented on an Eulerian coordinate and the structure is represented on a Lagrangian coordinate. For Newtonian fluids governed by the incompressible Navier–Stokes equations, the fluid equations are

  
    
      
        ρ
        
          (
          
            
              
                
                  ∂
                  
                    u
                  
                  (
                  
                    x
                  
                  ,
                  t
                  )
                
                
                  ∂
                  
                    t
                  
                
              
            
            +
            
              u
            
            ⋅
            ∇
            
              u
            
          
          )
        
        =
        −
        ∇
        p
        +
        μ
        
        Δ
        u
        (
        x
        ,
        t
        )
        +
        f
        (
        x
        ,
        t
        )
      
    
    {\displaystyle \rho \left({\frac {\partial {u}({x},t)}{\partial {t}}}+{u}\cdot \nabla {u}\right)=-\nabla p+\mu \,\Delta u(x,t)+f(x,t)}
  and in case of incompressible fluids (assuming constant density) we have the condition

  
    
      
        ∇
        ⋅
        u
        =
        0.
        
      
    
    {\displaystyle \nabla \cdot u=0.\,}
  The immersed structures are typically represented as a collection of one-dimensional fibers, denoted by 
  
    
      
        Γ
      
    
    {\displaystyle \Gamma }
  . Each fiber can be viewed as a parametric curve 
  
    
      
        X
        (
        s
        ,
        t
        )
      
    
    {\displaystyle X(s,t)}
   where 
  
    
      
        s
      
    
    {\displaystyle s}
   is the parameter and 
  
    
      
        t
      
    
    {\displaystyle t}
   is time. Physics of the fiber is represented via the fiber force distribution 
  
    
      
        F
        (
        s
        ,
        t
        )
      
    
    {\displaystyle F(s,t)}
  . Spring forces, bending resistance or any other type of behavior can be built into this term. The force exerted by the structure on the fluid is then interpolated as a source term in the momentum equation using

  
    
      
        f
        (
        x
        ,
        t
        )
        =
        
          ∫
          
            Γ
          
        
        F
        (
        s
        ,
        t
        )
        
        δ
        
          
            (
          
        
        x
        −
        X
        (
        s
        ,
        t
        )
        
          
            )
          
        
        
        d
        s
        ,
      
    
    {\displaystyle f(x,t)=\int _{\Gamma }F(s,t)\,\delta {\big (}x-X(s,t){\big )}\,ds,}
  where 
  
    
      
        δ
      
    
    {\displaystyle \delta }
   is the Dirac δ function. The forcing can be extended to multiple dimensions to model elastic surfaces or three-dimensional solids. Assuming a massless structure, the elastic fiber moves with the local fluid velocity and can be interpolated via the delta function

  
    
      
        
          
            
              ∂
              X
              (
              s
              ,
              t
              )
            
            
              ∂
              t
            
          
        
        =
        u
        (
        X
        ,
        t
        )
        =
        
          ∫
          
            Ω
          
        
        u
        (
        x
        ,
        t
        )
        
        δ
        
          
            (
          
        
        x
        −
        X
        (
        s
        ,
        t
        )
        
          
            )
          
        
        
        d
        x
        ,
      
    
    {\displaystyle {\frac {\partial X(s,t)}{\partial t}}=u(X,t)=\int _{\Omega }u(x,t)\,\delta {\big (}x-X(s,t){\big )}\,dx,}
  where 
  
    
      
        Ω
      
    
    {\displaystyle \Omega }
   denotes the entire fluid domain. 
Discretization of these equations can be done by assuming an Eulerian grid on the fluid and a separate Lagrangian grid on the fiber. 
Approximations of the Delta distribution by smoother functions will allow us to interpolate between the two grids. 
Any existing fluid solver can be coupled to a solver for the fiber equations to solve the Immersed Boundary equations.
Variants of this basic approach have been applied to simulate a wide variety of mechanical systems involving elastic structures which interact with fluid flows.
Since the original development of this method by Peskin, a variety of approaches have been developed to simulate flow over complicated immersed bodies on grids that do not conform to the surface of the body. These include methods such as the immersed interface method, the Cartesian grid method, the ghost fluid method and the cut-cell method. Mittal and Iaccarino refer to all these (and other related) methods as Immersed Boundary Methods and provide various categorizations of these methods. From the point of view of implementation, they categorize immersed boundary methods into continuous forcing and discrete forcing methods. In the former, a force term is added to the continuous Navier-Stokes equations before discretization, whereas in the latter, the forcing is applied (explicitly or implicitly) to the discretized equations. Under this taxonomy, Peskin's original method is a continuous forcing method whereas Cartesian grid, cut-cell and the ghost-fluid methods are discrete forcing methods.


== See also ==
Stochastic Eulerian Lagrangian method
Stokesian dynamics
Volume of fluid method
Level-set method
Marker-and-cell method


== Software: numerical codes ==
Advanced Simulation Library
MANGO-SELM : Stochastic Eulerian Lagrangian Methods, P. Atzberger, UCSB
Stochastic Immersed Boundary Methods in 3D, P. Atzberger, UCSB
Immersed Boundary Method for Uniform Meshes in 2D, A. Fogelson, Utah
IBAMR : Immersed Boundary Method for Adaptive Meshes in 3D, B. Griffith, NYU.
IB2d: Immersed Boundary Method for MATLAB and Python in 2D with 60+ examples, N.A. Battista, TCNJ
ESPResSo: Immersed Boundary Method for soft elastic objects
foam extend


== Notes ==


== References ==
Atzberger, Paul J. (2011). "Stochastic Eulerian Lagrangian Methods for Fluid Structure Interactions with Thermal Fluctuations". Journal of Computational Physics. 230 (8): 2821–2837. arXiv:1009.5648. Bibcode:2011JCoPh.230.2821A. doi:10.1016/j.jcp.2010.12.028.
Atzberger, Paul J.; Kramer, Peter R.; Peskin, Charles S. (2007). "A Stochastic Immersed Boundary Method for Fluid-Structure Dynamics at Microscopic Length Scales". Journal of Computational Physics. 224 (2): 1255–1292. arXiv:0910.5748. Bibcode:2007JCoPh.224.1255A. doi:10.1016/j.jcp.2006.11.015.
Jindal, S.; Khalighi, B.; Johnson, J.; Chen, K. (2007), "The Immersed Boundary CFD Approach for Complex Aerodynamics Flow Predictions", SAE Technical Paper Series, SAE Technical Paper, 1, doi:10.4271/2007-01-0109.
Kim, Jungwoo; Kim, Dongjoo; Choi, Haecheon (2001). "An Immersed-Boundary Finite Volume Method for Simulations of Flow in Complex Geometries". Journal of Computational Physics. 171 (1): 132–150. Bibcode:2001JCoPh.171..132K. doi:10.1006/jcph.2001.6778.
Mittal, Rajat; Iaccarino, Gianluca (2005). "Immersed Boundary Methods". Annual Review of Fluid Mechanics. 37 (1): 239–261. Bibcode:2005AnRFM..37..239M. doi:10.1146/annurev.fluid.37.061903.175743.
Moria, Yoichiro; Peskin, Charles S. (2008). "Implicit Second-Order Immersed Boundary Methods with Boundary Mass". Computer Methods in Applied Mechanics and Engineering. 197 (25–28): 2049–2067. Bibcode:2008CMAME.197.2049M. doi:10.1016/j.cma.2007.05.028.
Peskin, Charles S. (2002). "The immersed boundary method". Acta Numerica. 11: 479–517. doi:10.1017/S0962492902000077.
Peskin, Charles S. (1977). "Numerical analysis of blood flow in the heart". Journal of Computational Physics. 25 (3): 220–252. Bibcode:1977JCoPh..25..220P. doi:10.1016/0021-9991(77)90100-0.
Roma, Alexandre M.; Peskin, Charles S.; Berger, Marsha J. (1999). "An Adaptive Version of the Immersed Boundary Method". Journal of Computational Physics. 153 (2): 509–534. Bibcode:1999JCoPh.153..509R. doi:10.1006/jcph.1999.6293.
Singh Bhalla, Amneet Pal; Bale, Rahul; Griffith, Boyce E.; Patankar, Neelesh A. (2013). "A unified mathematical framework and an adaptive numerical method for fluid–structure interaction with rigid, deforming, and elastic bodies". Journal of Computational Physics. 250: 446–476. Bibcode:2013JCoPh.250..446B. doi:10.1016/j.jcp.2013.04.033.
Zhu, Luoding; Peskin, Charles S. (2002). "Simulation of a Flapping Flexible Filament in a Flowing Soap Film by the Immersed Boundary Method". Journal of Computational Physics. 179 (2): 452–468. Bibcode:2002JCoPh.179..452Z. doi:10.1006/jcph.2002.7066.